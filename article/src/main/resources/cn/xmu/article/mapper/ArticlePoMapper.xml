<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xmu.article.mapper.ArticlePoMapper">
  <resultMap id="BaseResultMap" type="cn.xmu.article.model.po.ArticlePo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="article_type" jdbcType="INTEGER" property="articleType" />
    <result column="article_cover" jdbcType="VARCHAR" property="articleCover" />
    <result column="is_appoint" jdbcType="INTEGER" property="isAppoint" />
    <result column="article_status" jdbcType="INTEGER" property="articleStatus" />
    <result column="publish_user_id" jdbcType="VARCHAR" property="publishUserId" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="read_counts" jdbcType="INTEGER" property="readCounts" />
    <result column="comment_counts" jdbcType="INTEGER" property="commentCounts" />
    <result column="mongo_file_id" jdbcType="VARCHAR" property="mongoFileId" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.xmu.article.model.po.ArticlePo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, title, category_id, article_type, article_cover, is_appoint, article_status, 
    publish_user_id, publish_time, read_counts, comment_counts, mongo_file_id, is_delete, 
    create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.xmu.article.model.po.ArticlePoExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.xmu.article.model.po.ArticlePoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from article
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.xmu.article.model.po.ArticlePo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article (id, title, category_id, 
      article_type, article_cover, is_appoint, 
      article_status, publish_user_id, publish_time, 
      read_counts, comment_counts, mongo_file_id, 
      is_delete, create_time, update_time, 
      content)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, 
      #{articleType,jdbcType=INTEGER}, #{articleCover,jdbcType=VARCHAR}, #{isAppoint,jdbcType=INTEGER}, 
      #{articleStatus,jdbcType=INTEGER}, #{publishUserId,jdbcType=VARCHAR}, #{publishTime,jdbcType=TIMESTAMP}, 
      #{readCounts,jdbcType=INTEGER}, #{commentCounts,jdbcType=INTEGER}, #{mongoFileId,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.xmu.article.model.po.ArticlePo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="title != null">
        title,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="articleType != null">
        article_type,
      </if>
      <if test="articleCover != null">
        article_cover,
      </if>
      <if test="isAppoint != null">
        is_appoint,
      </if>
      <if test="articleStatus != null">
        article_status,
      </if>
      <if test="publishUserId != null">
        publish_user_id,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="readCounts != null">
        read_counts,
      </if>
      <if test="commentCounts != null">
        comment_counts,
      </if>
      <if test="mongoFileId != null">
        mongo_file_id,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="articleType != null">
        #{articleType,jdbcType=INTEGER},
      </if>
      <if test="articleCover != null">
        #{articleCover,jdbcType=VARCHAR},
      </if>
      <if test="isAppoint != null">
        #{isAppoint,jdbcType=INTEGER},
      </if>
      <if test="articleStatus != null">
        #{articleStatus,jdbcType=INTEGER},
      </if>
      <if test="publishUserId != null">
        #{publishUserId,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readCounts != null">
        #{readCounts,jdbcType=INTEGER},
      </if>
      <if test="commentCounts != null">
        #{commentCounts,jdbcType=INTEGER},
      </if>
      <if test="mongoFileId != null">
        #{mongoFileId,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xmu.article.model.po.ArticlePoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update article
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.articleType != null">
        article_type = #{record.articleType,jdbcType=INTEGER},
      </if>
      <if test="record.articleCover != null">
        article_cover = #{record.articleCover,jdbcType=VARCHAR},
      </if>
      <if test="record.isAppoint != null">
        is_appoint = #{record.isAppoint,jdbcType=INTEGER},
      </if>
      <if test="record.articleStatus != null">
        article_status = #{record.articleStatus,jdbcType=INTEGER},
      </if>
      <if test="record.publishUserId != null">
        publish_user_id = #{record.publishUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.readCounts != null">
        read_counts = #{record.readCounts,jdbcType=INTEGER},
      </if>
      <if test="record.commentCounts != null">
        comment_counts = #{record.commentCounts,jdbcType=INTEGER},
      </if>
      <if test="record.mongoFileId != null">
        mongo_file_id = #{record.mongoFileId,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update article
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      article_type = #{record.articleType,jdbcType=INTEGER},
      article_cover = #{record.articleCover,jdbcType=VARCHAR},
      is_appoint = #{record.isAppoint,jdbcType=INTEGER},
      article_status = #{record.articleStatus,jdbcType=INTEGER},
      publish_user_id = #{record.publishUserId,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      read_counts = #{record.readCounts,jdbcType=INTEGER},
      comment_counts = #{record.commentCounts,jdbcType=INTEGER},
      mongo_file_id = #{record.mongoFileId,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update article
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      article_type = #{record.articleType,jdbcType=INTEGER},
      article_cover = #{record.articleCover,jdbcType=VARCHAR},
      is_appoint = #{record.isAppoint,jdbcType=INTEGER},
      article_status = #{record.articleStatus,jdbcType=INTEGER},
      publish_user_id = #{record.publishUserId,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      read_counts = #{record.readCounts,jdbcType=INTEGER},
      comment_counts = #{record.commentCounts,jdbcType=INTEGER},
      mongo_file_id = #{record.mongoFileId,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xmu.article.model.po.ArticlePo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="articleType != null">
        article_type = #{articleType,jdbcType=INTEGER},
      </if>
      <if test="articleCover != null">
        article_cover = #{articleCover,jdbcType=VARCHAR},
      </if>
      <if test="isAppoint != null">
        is_appoint = #{isAppoint,jdbcType=INTEGER},
      </if>
      <if test="articleStatus != null">
        article_status = #{articleStatus,jdbcType=INTEGER},
      </if>
      <if test="publishUserId != null">
        publish_user_id = #{publishUserId,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readCounts != null">
        read_counts = #{readCounts,jdbcType=INTEGER},
      </if>
      <if test="commentCounts != null">
        comment_counts = #{commentCounts,jdbcType=INTEGER},
      </if>
      <if test="mongoFileId != null">
        mongo_file_id = #{mongoFileId,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.xmu.article.model.po.ArticlePo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update article
    set title = #{title,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      article_type = #{articleType,jdbcType=INTEGER},
      article_cover = #{articleCover,jdbcType=VARCHAR},
      is_appoint = #{isAppoint,jdbcType=INTEGER},
      article_status = #{articleStatus,jdbcType=INTEGER},
      publish_user_id = #{publishUserId,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      read_counts = #{readCounts,jdbcType=INTEGER},
      comment_counts = #{commentCounts,jdbcType=INTEGER},
      mongo_file_id = #{mongoFileId,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xmu.article.model.po.ArticlePo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update article
    set title = #{title,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      article_type = #{articleType,jdbcType=INTEGER},
      article_cover = #{articleCover,jdbcType=VARCHAR},
      is_appoint = #{isAppoint,jdbcType=INTEGER},
      article_status = #{articleStatus,jdbcType=INTEGER},
      publish_user_id = #{publishUserId,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      read_counts = #{readCounts,jdbcType=INTEGER},
      comment_counts = #{commentCounts,jdbcType=INTEGER},
      mongo_file_id = #{mongoFileId,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>